#include  <stdio.h>
#include  <math.h>

typedef struct {
    double x;
    double y;
    } vec2;
    
typedef struct {
    double x;
    double y;
    double charge;
    } pointcharge;

vec2 vec2add(vec2 a, vec2 b);
vec2 vec2normalise(vec2 a);
    
vec2 field(vec2 pos, int numofpoints, pointcharge points[])
{   
    vec2 force;
    force.x = 0; force.y = 0;
    for(int i = 0; i < numofpoints; i++)
    {
    pointcharge point = points[i];
    vec2 f_part;
    f_part.x = pos.x - point.x; f_part.y = pos.y - point.y;
    double mag = sqrt(f_part.x*f_part.x + f_part.y*f_part.y);
    double scale = point.charge/mag*mag;
    f_part.x = (f_part.x/mag) * scale; f_part.y = (f_part.y/mag) * scale;
    
    force.x += f_part.x; force.y += f_part.y;
    }
    return force;
}

/*
int[] vectorline(int maxits, int numoflines, int numofpoints, int[] points)
{
double anglestep = M_PI/(double)numoflines;
int lines[numofpoints][numoflines][maxits*2];

for(int point = 0; point < n_points; point++)
    {
    for(char lineno = 0; angle < numoflines; angle++)
        {
        double angle = (double)lineno * anglestep;
        int lastx = lines[point][lineno][0] = cos(angle);
        int lasty = lines[point][lineno][1] = sin(angle);
        for(int it = 1; it < maxits; it++)
            {
            
            }
        }
    }
}
*/
int main(void)
{
printf("%d\n", 2);
}
